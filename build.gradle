// (c) 2015 Masato Kokubo

apply plugin: 'java'
apply plugin: 'eclipse'

repositories {
    mavenCentral()
}

dependencies {
	compile 'org.apache.logging.log4j:log4j-api:2.6'
	compile 'log4j:log4j:1.2.17'
	compile 'org.slf4j:slf4j-api:1.7.21'
}

sourceCompatibility = '1.8'
targetCompatibility = '1.8'
version             = '2.1.1'
project.archivesBaseName = 'debugtrace'

compileJava {
	options.encoding     = 'UTF-8'
	options.deprecation  = true
	options.debug        = true
	options.compilerArgs = ['-Xlint']
}

task compileJava_ja(type:JavaCompile) {
	options.encoding     = compileJava.options.encoding
	options.deprecation  = compileJava.options.deprecation
	options.debug        = compileJava.options.debug
	options.compilerArgs = compileJava.options.compilerArgs

	classpath      = compileJava.classpath
	source         = files('src/main_ja/java')
	destinationDir = file('build/classes/main_ja')
}

jar {
	manifest {
		attributes	'Implementation-Title'    : project.name,
					'Implementation-Version'  : version,
					'Implementation-Vendor'   : 'Masato Kokubo',
					'Implementation-Vendor-Id': 'jp.masatokokubo'
	}
}

javadoc {
	title               = "$project.name $version API Specification"
	options.encoding     = 'UTF-8'
	options.locale      = 'en'
	options.windowTitle = "$project.name"
	options.overview    = 'src/main/java/overview.html'
	options.addBooleanOption('author', true)
	options.addStringOption ('bottom', '<div class="copyright">&copy;2015 Masato Kokubo</div>')
}

javadoc.doLast {
	new File("src/main/java/addtional.css").eachLine {
		new File("build/docs/javadoc/stylesheet.css").append("$it\n")
	}
}

task javadoc_ja(type:Javadoc) {
	dependsOn = ['compileJava_ja']

	title               = "$project.name $version API 仕様"
	options.encoding    = javadoc.options.encoding
	options.locale      = 'ja'
	options.windowTitle = javadoc.options.windowTitle
	options.overview    = javadoc.options.overview
	options.addBooleanOption('author', true)
	options.addStringOption ('bottom', '<div class="copyright">&copy;2015 小久保 雅人</div>')

	classpath      = javadoc.classpath
	source         = fileTree('src/main_ja/java').include('**/*.java')
	destinationDir = file('build/docs/javadoc_ja')
}

javadoc_ja.doLast {
	new File("src/main/java/addtional_ja.css").eachLine {
		new File("build/docs/javadoc_ja/stylesheet.css").append("$it\n")
	}
}

task zip(type: Zip) {
	appendix   = 'java8'
	classifier = 'bin'

	into('/'         , {from 'build/libs'})
	into('/'         , {from 'LICENSE.txt', 'README.md'})
	into('javadoc'   , {from 'build/docs/javadoc'})
	into('javadoc_ja', {from 'build/docs/javadoc_ja'})
	into('resources-sample', {from 'src/test/resources'})
}
